<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_votu_backup.BackupRequestStateHandlerAjaxSNC</api_name>
        <client_callable>true</client_callable>
        <description>Base client API extended by BackupRequestStateHandlerAjax</description>
        <name>BackupRequestStateHandlerAjaxSNC</name>
        <script><![CDATA[var BackupRequestStateHandlerAjaxSNC = Class.create();
BackupRequestStateHandlerAjaxSNC.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	initialize: function(request, responseXML, gc) {
        AbstractAjaxProcessor.prototype.initialize.call(this, request, responseXML, gc);
        this.log = new GSLog(BackupRequestStateHandlerSNC.LOG_PROPERTY);
        this.log.setLog4J();
    },

    /**
     * Confirms whether the state value is a valid "next" state for the backup to move to
     * 
     * @param sysparm_backup_sys_id sys_id of a backup_request record
     * @param sysparm_next_state name of the state to check. E.g. assess, authorized, etc.
     */
    ajaxFunction_isNextState: function() {
        var sysId = this.getParameter("sysparm_backup_sys_id");
        var backupGr = this._getBackupGr(sysId);
        if (!backupGr) {
            this.log.debug("[isNextState] could not find backup_request with sys_id = " + sysId);
            return false;
        }

        return new BackupRequestStateHandler().isNext(this.getParameter("sysparm_next_state"));
    },

    /**
     * Returns an array containing the values of the next states for an existing backup
     * 
     * @param sysparm_backup_sys_id sys_id of a backup_request record
     */
    ajaxFunction_getNextStateValues: function() {
        var backupId = this.getParameter("sysparm_backup_sys_id");
		var backupType = '' + this.getParameter("sysparm_backup_type");
        if (!backupId && !backupType)
            return "";

		var gr;
		gr = new GlideRecord("backup_request");
		if (!gr.get(backupId)) {
			this.log.debug("[getNextStateValues] could not find backup_request with sys_id = " + backupId);
			gr = BackupRequest.newBackup(backupType).getGlideRecord();
		} 	
		
		var stateValues = [];

		var stateHandler = new BackupRequestStateHandler(gr);
		var nextStates = stateHandler.getNextStates();
		if (nextStates) {
			for (var i = 0; i < nextStates.length; i++)
				stateValues.push(stateHandler.getStateValue(nextStates[i]));
		}
		
		return JSON.stringify(stateValues);
    },

    /**
     * Returns the name of the state given its numeric value. E.g. -4 = assess, -3 = authorize
     * 
     * @param sysparm_state_name name of the state to convert. E.g. assess, authorize, etc
     */
    ajaxFunction_getStateValue: function() {
        var stateName = this.getParameter("sysparm_state_name");
        if (!stateName)
            return "";

        var stateValue = new BackupRequestStateHandler().getStateValue(stateName);

        this.log.debug("[getStateValue] state with name '" + stateName + "' return with value '" + stateValue + "'");

        return stateValue || "";
    },

    _getBackupGr: function(sysId) {
        if (!sysId)
            return null;

        var gr = new GlideRecord("backup_request");
        if (gr.get(sysId))
            return gr;

        return null;
    },
    type: 'BackupRequestStateHandlerAjaxSNC'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>michelle.local</sys_created_by>
        <sys_created_on>2017-05-20 08:18:00</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>11b3ca9adbba3e00e3be5fa0cf961958</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>BackupRequestStateHandlerAjaxSNC</sys_name>
        <sys_package display_value="backup" source="x_votu_backup">1577a3ebdbeaf60099d45040cf9619d4</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="backup">1577a3ebdbeaf60099d45040cf9619d4</sys_scope>
        <sys_update_name>sys_script_include_11b3ca9adbba3e00e3be5fa0cf961958</sys_update_name>
        <sys_updated_by>michelle.local</sys_updated_by>
        <sys_updated_on>2017-05-22 01:28:38</sys_updated_on>
    </sys_script_include>
</record_update>
